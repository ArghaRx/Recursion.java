import java.util.*;
class Solution {
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> ans = new ArrayList<>();
        Arrays.sort(candidates);
        findCombination(0,candidates,target,ans,new ArrayList<>());
        return ans;
    }
    public static void  findCombination(int ind, int arr[], int target,List<List<Integer>> ans , List<Integer> ds)
    {
        // BASE CONDITION
        if(target == 0)
        {
            ans.add(new ArrayList<>(ds));
            return;
        }

        // loop from index to last 
        for(int i = ind ; i < arr.length ; i++)
        {
             // Every time i check i > ind && previous element is same same now
             // arr[i] == arr[i-1]
            if(i > ind && arr[i] == arr[i-1]) continue;

            if(arr[i] > target) break;
            
            ds.add(arr[i]);
            findCombination(i+1 , arr , target - arr[i] , ans , ds);
            ds.remove(ds.size() - 1);
        }

    }
}
